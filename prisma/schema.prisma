// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  ApiKey        ApiKey[]
  // 用户拥有一个可选的 apiKeyId
  apiKeyId      String?
}

//  增加 API key 
model ApiKey {
  id      String  @id @default(cuid())
  key     String  @unique
  enabled Boolean @default(true)
  User    User    @relation(fields: [userId], references: [id])
  userId  String

  requests ApiRequest[]

  //不可全部相同
  @@unique([userId, key, enabled])
}

// 增加 api 返回字段
model ApiRequest {
  id        String   @id @default(cuid())
  timestamp DateTime @default(now())
  method    String
  path      String
  status    Int
  duration  Int

  usedApiKey String

  ApiKey   ApiKey @relation(fields: [apiKeyId], references: [id])
  apiKeyId String

  // 对 apiKeyId or timestamp 做索引
  @@index([apiKeyId, timestamp])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
